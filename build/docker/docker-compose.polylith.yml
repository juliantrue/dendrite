version: "3.4"
services:
  postgres:
    hostname: postgres
    image: postgres:9.6
    restart: always
    volumes:
      - ./postgres/create_db.sh:/docker-entrypoint-initdb.d/20-create_db.sh
    # To persist your PostgreSQL databases outside of the Docker image, to 
    # prevent data loss, you will need to add something like this:
    #  - ./path/to/persistent/storage:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: itsasecret
      POSTGRES_USER: dendrite
    healthcheck:
      test: pg_isready -q -d dendrite_naffka -U dendrite || exit -1
      timeout: 10s
      interval: 10s
      retries: 3
    networks:
      - internal

  # Zookeeper is only needed for polylith mode!
  zookeeper:
    hostname: zookeeper
    image: zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - internal

  # Kafka is only needed for polylith mode!
  kafka:
    container_name: dendrite_kafka
    hostname: kafka
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
    depends_on:
      postgres:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
    networks:
      - internal

  client_api:
    hostname: client_api
    image: matrixdotorg/dendrite-polylith:latest
    command: clientapi
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal

  media_api:
    hostname: media_api
    image: matrixdotorg/dendrite-polylith:latest
    command: mediaapi
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal

  sync_api:
    hostname: sync_api
    image: matrixdotorg/dendrite-polylith:latest
    command: syncapi
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal

  room_server:
    hostname: room_server
    image: matrixdotorg/dendrite-polylith:latest
    command: roomserver
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal

  edu_server:
    hostname: edu_server
    image: matrixdotorg/dendrite-polylith:latest
    command: eduserver
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal

  federation_api:
    hostname: federation_api
    image: matrixdotorg/dendrite-polylith:latest
    command: federationapi
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal

  federation_sender:
    hostname: federation_sender
    image: matrixdotorg/dendrite-polylith:latest
    command: federationsender
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal
      
  key_server:
    hostname: key_server
    image: matrixdotorg/dendrite-polylith:latest
    command: keyserver
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
        - internal

  signing_key_server:
    hostname: signing_key_server
    image: matrixdotorg/dendrite-polylith:latest
    command: signingkeyserver
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal

  user_api:
    hostname: user_api
    image: matrixdotorg/dendrite-polylith:latest
    command: userapi
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
        - internal

  appservice_api:
    hostname: appservice_api
    image: matrixdotorg/dendrite-polylith:latest
    command: appservice
    volumes:
      - ./config/dendrite-config.yaml:/etc/dendrite/dendrite.yaml
      - ./config/matrix_key.pem:/etc/dendrite/matrix_key.pem
      - ./config/server.crt:/etc/dendrite/server.crt
      - ./config/server.key:/etc/dendrite/server.key
    depends_on: 
      - kafka
    networks:
      - internal

  nginx:
    hostname: nginx
    image: nginx:1.19
    depends_on: 
      - appservice_api
      - federation_api
      - media_api
      - client_api
      - sync_api
    ports:
      - 443:443
    volumes:
      - ./config/nginx-polylith.conf:/etc/nginx/nginx.conf
      - ./config/dhparam.pem:/etc/ssl/dhparam.pem
      - ./config/server.crt:/etc/ssl/server.crt
      - ./config/server.key:/etc/ssl/server.key
    networks:
      - internal

networks:
  internal:
    attachable: true
